generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MEMBER
}

// ONLY for EE Usage
enum Plan {
  FREE
  PRO
  ENTERPRISE
}

enum AuthType {
  OAUTH2
  APIKEY
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  otp           String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  members       Member[]
  sheets        Sheet[]
}

model Organization {
  id        String   @id @default(cuid())
  name      String
  apiKey    String   @unique @default(uuid())
  mcpTools  Json     @default("[]")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  members   Member[]
  sheets    Sheet[]
  billing   Billing?
  columns   Column[]
}

model Member {
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  userId         String
  user           User         @relation(fields: [userId], references: [id])
  role           Role

  @@id([userId, organizationId])
}

// ONLY for EE Usage
model Billing {
  organizationId String       @id @unique
  organization   Organization @relation(fields: [organizationId], references: [id])
  credits        Int          @default(1000) // 1 credit = 1 Column Task or 10 Credits for 1 row extraction
  thirdPartyId   String?
  subscriptionId String?
  plan           Plan         @default(FREE)
  expiresAt      DateTime?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model Sheet {
  id                String       @id @default(uuid())
  name              String
  createdById       String?
  createdBy         User?        @relation(fields: [createdById], references: [id])
  organizationId    String
  organization      Organization @relation(fields: [organizationId], references: [id])
  singleSource      Boolean      @default(false)
  extractInProgress Boolean      @default(false)
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  columns           Column[]
  cells             Json         @default("{}")  // row_column: value
}

model Column {
  id             String       @id @default(uuid())
  sheetId        String
  sheet          Sheet        @relation(fields: [sheetId], references: [id])
  name           String
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id])
  position       Int
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}
